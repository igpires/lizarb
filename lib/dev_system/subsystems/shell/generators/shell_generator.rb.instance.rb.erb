# view instance.rb.erb

  def self.call(menv)
    super
    log "call: #{menv}"
    shell = menv[:shell] = new
    ret = shell.call menv
    if ret
      log :normal, "shell.call succeeded"
    else
      log :normal, "shell.call failed"
    end
    ret
  end

  def initialize
    @status = nil
  end

  attr_reader :status

  def call(menv)
    super
    before
    method_name = "call_#{action_name}"
    if respond_to? method_name
      public_send method_name
      after
      true
    else
      log :normal, "method not found: #{method_name.inspect}"
      false
    end
  end

  def before
    menv[:before] = Time.now
    log :normal, "before: #{menv}"
  end

  def after
    menv[:after] = Time.now
    log :normal, "after: #{menv}"
  end

  def action_name() = menv[:action]

  def shell() = menv[:shell]

<% if the_accessors.any? -%>
  attr_accessor :<%= the_accessors.join ", :"  %>

<% end -%>
<%= "  section :actions" if arg_action_names.any? %>
<% arg_action_names.each do |action_name| %>
  def call_<%= action_name %>
    log :normal, "Log. Don't comment."
    menv[:call_<%= action_name %>] = Time.now
    log "call_<%= action_name %>: #{menv}"
    # your code here
<% unless arg_views_none? %>
    text = render :<%= action_name %>, format: :txt
    fg = :<%= ColorShell.colors.keys.sample %>
    bg = :<%= %w[black onyx gray silver white].sample %>
    log stick fg, bg, :b, "text:"
    puts stick fg, bg, :b, text
<% end -%>
  end
<% end -%>
